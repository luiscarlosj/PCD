/*
 * ViewResults.java
 *
 * Created on December 14, 2004, 5:44 PM
 */
package ui;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import model.clustering.DataPoint;
import ptolemy.plot.Plot;

/**
 *
 * @author jcsilva
 */
public class ResultsViewUI extends javax.swing.JFrame {

    private String plotTitle = "Results";

    /**
     * Creates new form ViewResults
     */
    public ResultsViewUI(Map<Integer, List<DataPoint>> clusterMap) {
        initComponents();
        initPlotter(clusterMap);
    }

    public ResultsViewUI(String title, Map<Integer, List<DataPoint>> clusterMap) {
        initComponents();
        this.plotTitle = title;
        initPlotter(clusterMap);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void initPlotter(Map<Integer, List<DataPoint>> clusterMap) {

        try {
            // Instantiate the plot.
            Plot dataPlot = new Plot();
            // Set the size of the toplevel window.
            //setSize(800, 350);
            //dataPlot.setSize(800, 300);
            dataPlot.setButtons(true);
            dataPlot.setTitle(this.plotTitle);
            //dataPlot.setYRange(-4, 4);
            //dataPlot.setXRange(0, 100);
            //dataPlot.setXLabel("X");
            //dataPlot.setYLabel("Y");
            //dataPlot.addYTick("-PI", -Math.PI);
            //dataPlot.addYTick("-PI/2", -Math.PI/2);
            //dataPlot.addYTick("0",0);
            //dataPlot.addYTick("PI/2", Math.PI/2);
            //dataPlot.addYTick("PI", Math.PI);
            dataPlot.setMarksStyle("various");
            //dataPlot.setImpulses(true);
            // Call setConnected before reading in data.
            dataPlot.setConnected(false);
            boolean first = true;

            // Removed 2012.01.26 1902] Enumeration keys = clusterMap.keys();
            Set<Integer> keySet = clusterMap.keySet();
            Iterator<Integer> keysIterator = keySet.iterator();
            while (keysIterator.hasNext()) {
                Integer database = keysIterator.next();
                List<DataPoint> dataPoints = clusterMap.get(database);
                for (int i = 0; i < dataPoints.size(); i++) {
                    DataPoint dp = dataPoints.get(i);
                    int dimension = dp.getDimension();
                    double x = dp.getValue(0);
                    double y = 0; // TODO Choose dimensions to display
                    if (dimension > 1) {   //This library accepts just 1 or 2-D! Other 
                        y = dp.getValue(1);// dimensions will be ignored. 
                    }
                    dataPlot.addPoint(database.intValue(), x, y, !first);

                    first = false;

                }
            }


            // Layout the plot
            GridBagLayout gridbag = new GridBagLayout();
            GridBagConstraints c = new GridBagConstraints();
            getContentPane().setLayout(gridbag);

            // Handle the dataPlot
            c.gridx = 0;
            c.gridy = 0;
            c.gridwidth = 1;
            gridbag.setConstraints(dataPlot, c);
            getContentPane().add(dataPlot);

        } catch (java.lang.Exception e) {
            System.out.println("There's something wrong in Denmark kingdom.");
            e.printStackTrace();
        }

    }

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.dispose();
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Map<Integer, List<DataPoint>> clusterMap = null;
        ResultsViewUI resultsView = new ResultsViewUI(clusterMap);
        resultsView.pack();
        resultsView.setVisible(true);

    }

    /**
     * Getter for property plotTitle.
     *
     * @return Value of property plotTitle.
     */
    public java.lang.String getPlotTitle() {
        return plotTitle;
    }

    /**
     * Setter for property plotTitle.
     *
     * @param plotTitle New value of property plotTitle.
     */
    public void setPlotTitle(java.lang.String plotTitle) {
        this.plotTitle = plotTitle;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
